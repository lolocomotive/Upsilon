name: Continuous integration
#on: [pull_request, push]
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      triggerIos:
        description: 'Run iOS tests'
        required: true
        default: 'no'
      triggerMacos:
        description: 'Run macOS tests'
        required: true
        default: 'no'
      trigger3DS:
        description: 'Run 3DS tests'
        required: true
        default: 'no'
jobs:
  nintendo_3ds:
    if: github.event.inputs.trigger3DS == 'yes'
    runs-on: ubuntu-latest
    steps:
      - run: wget https://github.com/devkitPro/pacman/releases/download/v1.0.2/devkitpro-pacman.amd64.deb -O /tmp/devkitpro-pacman.deb
      - run: yes | sudo dpkg -i /tmp/devkitpro-pacman.deb
      - run: yes | sudo dkp-pacman -Syu --needed devkitARM 3dstools libctru
      - run: echo ::set-env name=DEVKITPRO::/opt/devkitpro
      - run: echo ::set-env name=DEVKITARM::/opt/devkitpro/devkitARM
      - run: echo ::set-env name=PATH::$DEVKITPRO/tools/bin:$DEVKITARM/bin:$PATH

      - uses: actions/checkout@v1
        with:
          submodules: true
      - run: make -j2 PLATFORM=simulator TARGET=3ds
      - run: make -j2 PLATFORM=simulator TARGET=3ds epsilon.cia
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-3ds.3dsx
          path: output/release/simulator/3ds/epsilon.3dsx
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-3ds.cia
          path: output/release/simulator/3ds/epsilon.cia
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: make -j2 PLATFORM=simulator TARGET=android
      - id: 'auth'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{secrets.GOOGLE_CREDENTIALS}}'
      - id: 'upload-file'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: 'output/release/simulator/android/epsilon.apk'
          destination: 'upsilon-binfiles.appspot.com/beta/simulator/'
          parent: false
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-android.apk
          path: output/release/simulator/android/epsilon.apk
  prebuild:
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get install build-essential imagemagick libfreetype6-dev libjpeg-dev libpng-dev pkg-config
      - uses: numworks/setup-arm-toolchain@2021-10
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: bash build/prebuild.bash
      - run: bash build/prebuild-n100.bash
      - run: make -j bootloader MODEL=n0110
      - run: mv output/release/device/n0110/bootloader.bin binpacks/n110/bootloader.bin
      - run: shasum -a 256 -b binpacks/n110/bootloader.bin > binpacks/n110/bootloader.bin.sha256
      - id: 'auth'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{secrets.GOOGLE_CREDENTIALS}}'
      - id: 'upload-directory'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: 'binpacks/'
          destination: 'upsilon-binfiles.appspot.com/beta/'
          parent: false
  windows:
    runs-on: windows-latest
    defaults:
       run:
         shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: pacman -S --noconfirm mingw-w64-x86_64-gcc mingw-w64-x86_64-freetype mingw-w64-x86_64-pkg-config make mingw-w64-x86_64-python3 mingw-w64-x86_64-libjpeg-turbo mingw-w64-x86_64-libpng
      - run: make -j2 PLATFORM=simulator
      - id: 'auth'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{secrets.GOOGLE_CREDENTIALS}}'
      - id: 'upload-file'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: 'output/release/simulator/windows/epsilon.exe'
          destination: 'upsilon-binfiles.appspot.com/beta/simulator/'
          parent: false
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-windows.exe
          path: output/release/simulator/windows/epsilon.exe
  web:
    runs-on: ubuntu-latest
    steps:
      - uses: numworks/setup-emscripten@v1
        with:
          sdk: 1.40.1
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: make -j2 PLATFORM=simulator TARGET=web
      - run: mkdir simulator
      - run: mv output/release/simulator/web/epsilon.js simulator/epsilon.light.js
      - run: mv output/release/simulator/web/epsilon.zip simulator/epsilon.zip
      - run: make cleanall
      - run: make -j2 PLATFORM=simulator TARGET=web THEME_NAME=upsilon_dark THEME_REPO=https://github.com/lemoustachu/Upsilon-Themes
      - run: mv output/release/simulator/web/epsilon.js simulator/epsilon.dark.js
      - id: 'auth'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{secrets.GOOGLE_CREDENTIALS}}'
      - id: 'upload-directory'
        if: ${{ github.event_name == 'push'  && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: 'simulator/'
          destination: 'upsilon-binfiles.appspot.com/beta/simulator/'
          parent: false
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-web.zip
          path: output/release/simulator/web/epsilon.zip
  linux:
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get install build-essential imagemagick libfreetype6-dev libjpeg-dev libpng-dev pkg-config
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: make -j2 PLATFORM=simulator
      - id: 'auth'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{secrets.GOOGLE_CREDENTIALS}}'
      - id: 'upload-file'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-beta' && github.repository == 'lolocomotive/Upsilon' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: 'output/release/simulator/linux/epsilon.bin'
          destination: 'upsilon-binfiles.appspot.com/beta/simulator/'
          parent: false
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-linux.bin
          path: output/release/simulator/linux/epsilon.bin
  macos:
    if: github.event.inputs.triggerMacos == 'yes'
    runs-on: macOS-latest
    steps:
      - run: brew install numworks/tap/epsilon-sdk
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: make -j2 PLATFORM=simulator
      - run: make -j2 PLATFORM=simulator ARCH=x86_64 test.bin
      - run: output/release/simulator/macos/x86_64/test.bin --headless
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-macos.zip
          path: output/release/simulator/macos/epsilon.app
  ios:
    if: github.event.inputs.triggerIos == 'yes'
    runs-on: macOS-latest
    steps:
      - run: brew install numworks/tap/epsilon-sdk
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: make -j2 PLATFORM=simulator TARGET=ios EPSILON_TELEMETRY=0
      - run: make -j2 PLATFORM=simulator TARGET=ios EPSILON_TELEMETRY=0 APPLE_PLATFORM=ios-simulator
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-ios.ipa
          path: output/release/simulator/ios/epsilon.ipa

env:
  ACCEPT_OFFICIAL_TOS: 1
